import { isValidIP } from "../lib";

const data: [string, boolean][] = [
    // IP6 test cases
    ['fe80:0000:0000:0000:0204:61ff:fe9d:f156', true],
    ['fe80:0000:0000:0000:0204:61ff:fe9d:f156/128', true],
    ['fe80:0000:0000:0000:0204:61ff:fe9d:f156/127/128', false],
    ['fe80:0000:0000:0000:0204:61ff:fe9d:f156/127/', false],
    ['fe80:0:0:0:204:61ff:fe9d:f156', true],
    ['fe80:0:0:0:204:61ff:fe9d:f156/128', true],
    ['fe80:0:0:0:204:61ff:fe9d:f156/127/128', false],
    ['fe80:0:0:0:204:61ff:fe9d:f156/127/', false],
    ['fe80::204:61ff:fe9d:f156', true],
    ['fe80::204:61ff:fe9d:f156/128', true],
    ['fe80::204:61ff:fe9d:f156/127/128', false],
    ['fe80::204:61ff:fe9d:f156/127/', false],
    ['fe80:0000:0000:0000:0204:61ff:254.157.241.86', true],
    ['fe80:0000:0000:0000:0204:61ff:254.157.241.86/128', true],
    ['fe80:0000:0000:0000:0204:61ff:254.157.241.86/127/128', false],
    ['fe80:0000:0000:0000:0204:61ff:254.157.241.86/127/', false],
    ['fe80:0:0:0:0204:61ff:254.157.241.86', true],
    ['fe80:0:0:0:0204:61ff:254.157.241.86/128', true],
    ['fe80:0:0:0:0204:61ff:254.157.241.86/127/128', false],
    ['fe80:0:0:0:0204:61ff:254.157.241.86/127/', false],
    ['fe80::204:61ff:254.157.241.86', true],
    ['fe80::204:61ff:254.157.241.86/128', true],
    ['fe80::204:61ff:254.157.241.86/127/128', false],
    ['fe80::204:61ff:254.157.241.86/127/', false],
    ['fe80::204:61ff:254.157.241.999/128', false],
    ['fe80::204:61fg:254.157.241.86/127', false],
    ['fe80:0000:0000:0000:0204:61ff:WXYZ:f156/128', false],  // TODO FIX
    ['fe80:::1/128', false],
    ['::1', true],
    ['::1/128', true],
    ['::1/128/127', false],
    ['::1/128/', false],
    [':::1/128', false],
    ['2001::', true],
    ['2001::/128', true],
    ['2001::/128/', false],
    ['2001::/128/127', false],
    // IP4 test cases
    ['192.168.9.0/24', true],
    ['192.168.9.0', true],
    ['192.168.9.0/24/32', false],
    ['192.168.9.999/24', false],
    ['127.1/8', false], //Technically valid but we're not going to accept shorthand
];

describe.each(data)('isValidIP("%s")', (ip, expected) => {
    test(`returns ${expected}`, () =>{
        expect(isValidIP(ip)).toBe(expected);
    });
});